knitr::include_graphics("assets/kelompok_umur.jpg")
knitr::include_graphics("assets/factor_analysis1.png")
library(readr) # untuk membaca data
library(dplyr) # untuk data manipulation
library(GGally) # untuk membuat matriks korelasi
library(psych) #
library(corrplot) #
library(ggplot2)
library (GPArotation)
library(factoextra) # for model comparison and assumption check)
library(gridExtra)
library(tidyr)
library(rmdformats)
library(BAMMtools)
rentan <- readxl::read_xlsx("dataset/kerentanansosial.xlsx")
rmarkdown::paged_table(rentan)
glimpse(rentan)
colSums(is.na(rentan))
summary(rentan)
rentan[which(rentan$pengangguran < 0.1951 | rentan$pengangguran > 1.770), ]
ggpairs(rentan[,c(2:13)], showStrips = F, upper = list(continuous = wrap("cor", size=2))) +
theme(axis.text = element_text(colour = "black", size = 7),
strip.background = element_rect(fill = "#6e8f71"),
strip.text = element_text(colour = "white", size = 6,
face = "bold"))
ggplot(data = rentan, mapping = aes(x=  lansia, y= reorder(Kecamatan,lansia))) +
geom_col(aes(fill = lansia))  + # untuk membuat barplot
labs(
title = "Persentase Jumlah Lansia pada masing-masing Kecamatan di Provinsi DKI Jakarta",
x = "Persentase Lansia",
y = "Kecamatan"
) +
scale_fill_gradient(low = "#a9d1b1", high = "#4c614e") +
geom_text(mapping = aes(label=round(lansia, digits = 4)), # menambahkan informasi label masing-masing kategori dengan variasi box
col = "white", # memberikan warna pada text
nudge_x = -1, # menggeser text berdasarkan sumbu x
label.size = 12) +
theme_minimal() +
theme(legend.position = "none") # untuk menghilangkan legend.
ggcorr(rentan, label = T, hjust = 1, layout.exp = 2, size = 3, label_size = 2, label_round = 2, low = "#d7fc5b", mid = "white", high = "#5d8064")
rentan_cor <- cor(rentan[,2:13])
rentan_KMO<-KMO(rentan_cor)
rentan_KMO$MSA
rmarkdown::paged_table(as.data.frame(rentan_KMO$MSAi))
bartlett.test(rentan[,2:13])
fa_rentan <- fa(r = rentan_cor)
fa_rentan
nfactors <- fa.parallel(rentan[,2:13], plot = T)
summary(nfactors)
# jumlah faktor optimal yang didapat
nfact <- nfactors$nfact
#factor analysis
fa_rentan_opt <- fa(r = rentan_cor, nfactors = nfact, rotate = "varimax")
fa_rentan_opt
fa.diagram(fa_rentan_opt, rsize = 1)
rentan_pca<-prcomp(rentan[,2:13], scale. = T)
rmarkdown::paged_table(as.data.frame(rentan_pca$x))
pc_keep <- rentan_pca$x[, 1:2] %>%
as.data.frame()
rmarkdown::paged_table(pc_keep)
SoVI <- pc_keep %>%
mutate(SoVI = 0.52*abs(PC1) + 0.48*abs(PC2))
rmarkdown::paged_table(SoVI)
rentan_new <- rentan %>%
select_if(~!is.numeric(.)) %>% # ambil kolom Kecamatan
cbind(SoVI = SoVI[,3]) # gabungkan dengan kolom SoVI
rmarkdown::paged_table(rentan_new)
# Membagi SoVI ke dalam 3 kategori
natural_breaks <- function(df, var) {
var_breaks <- BAMMtools::getJenksBreaks(df[[var]], k = 4)
df[[paste0('Jenks_', var)]] <- findInterval(df[[var]], var_breaks)
df
}
rentan_new <- natural_breaks(rentan_new, "SoVI")
# Membuat Kategori Rendah Sedang Tinggi
rentan_new$Kategori <- ordered(rentan_new$Jenks_SoVI,
levels = c(1,2,3),
labels = c("Rendah", "Sedang", "Tinggi"))
rmarkdown::paged_table(rentan_new)
# Melihat threshold untuk masing-masing kategori
getJenksBreaks(rentan_new$SoVI, 4)
library(geojsonio)
jakarta_json <- geojson_read("dataset/gadm36_IDN_3.json", what = "sp")
rmarkdown::paged_table(head(jakarta_json@data))
jakarta_json_mod <- sf::st_as_sf(jakarta_json)
library(stringr)
jakarta_json_mod <- jakarta_json_mod %>%
# Agar mudah digabung
mutate(NAME_3 = str_replace_all(NAME_3, fixed(" "), "") %>% str_to_title()) %>%
# melakukan pemotongan variabel/kolom yang tidak berguna untuk analisis
dplyr::select(-c(id, NL_NAME_1, NL_NAME_2, NL_NAME_3, VARNAME_3, HASC_3, TYPE_3, ENGTYPE_3))
# melakukan inspeksi data dan tipenya
glimpse(jakarta_json_mod)
jakarta_rentan <- jakarta_json_mod %>%
left_join(rentan_new, by = c("GID_3" = "Kode")) %>%
arrange(NAME_3, NAME_0)
glimpse(jakarta_rentan)
jakarta_rentan_sf <- jakarta_rentan %>%
filter(GID_3 != "IDN.7.3.10_1") %>%
filter(GID_3 != "IDN.7.3.3_1") %>%
filter(GID_3 != "IDN.7.5.2_1") %>%
sf::st_as_sf()
m <- leaflet(jakarta_rentan_sf)
popup.cont  <- paste("<h2><b>", jakarta_rentan_sf$NAME_3, "</b></h2>")
col <- jakarta_rentan_sf$SoVI
col <- col %>% replace(is.na(.), 0)
bins <- c(getJenksBreaks(jakarta_rentan_sf$SoVI, 4))
pal <- colorBin("YlOrRd", domain = col, bins = bins,)
m %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addPolygons(fillColor = pal(col),
weight = 1,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.8,
label = paste0("Kecamatan: ", jakarta_rentan_sf$NAME_3),
popup = popup.cont) %>%
addLegend("bottomright",
pal = pal,
values = ~col,
title = "Social Vulnerability Index",
labFormat = labelFormat(digits = 2),
opacity = 1)
rentan_FCM <- rentan[,1:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
rentan_FCM <- rentan_FCM %>%
select(-Kecamatan)
View(rentan_FCM)
rentan_FCM <- rentan[,1:13]
head(rentan_FCM)
rentan_FCM <- rentan[,1:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
View(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
rentan_FCM[,-1]
View(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
rentan_FCM <- rentan_FCM[,-1]
View(rentan_FCM)
rentan_FCM <- rentan[,1:13]
head(rentan_FCM)
rentan_FCM <- rentan_FCM[,-1]
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
View(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
View(rentan_FCM)
rentan_FCM <- rentan[,1:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan_FCM$Kecamatan
View(rentan_FCM)
rentan_FCM <- rentan[,2:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan$Kecamatan
View(rentan_FCM)
rownames(rentan_FCM) <- rentan$Kecamatan
head(rentan_FCM)
View(rentan_FCM)
rentan_FCM
View(rentan_FCM)
rownames(rentan_FCM) <- rentan$Kecamatan
rentan_FCM_scale <- scale(rentan_FCM)
View(rentan_FCM_scale)
set.seed(123)
silhouette <-
fviz_nbclust(
x = rentan_FCM_scale,
FUNcluster = cmeans,
method = "silhouette",
k.max = 10
) + labs(subtitle = "Metode Silhouette")
set.seed(123)
silhouette <-
fviz_nbclust(
x = rentan_FCM_scale,
FUNcluster = kmeans,
method = "silhouette",
k.max = 10
) + labs(subtitle = "Metode Silhouette")
set.seed(123)
silhouette <-
fviz_nbclust(
x = rentan_FCM_scale,
FUNcluster = kmeans,
method = "silhouette",
k.max = 10
) + labs(subtitle = "Metode Silhouette")
silhouette
set.seed(123)
elbow <-
fviz_nbclust(
x = rentan_FCM_scale,
FUNcluster = kmeans,
method = "wss",
k.max = 10
) + labs(subtitle = "Metode Elbow")
elbow
fkm.rentan <- fcm(rentan_FCM_scale, 5, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
library(ppclust)
fkm.rentan <- fcm(rentan_FCM_scale, 5, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
fkm.rentan
summary(fkm.rentan)
library(ppclust)
fkm.rentan <- fcm(rentan_FCM_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fkm.rentan)
fkm.rentan$cluster
data.frame(rentan$Kecamatan,fkm.rentan$cluster)
fkm.rentan$v
rentan_FCM <- rentan[,2:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan$Kecamatan
# custom function to implement min max scaling
minMax <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#normalise data using custom function
normalisedMydata <- as.data.frame(lapply(rentan_FCM, minMax))
head(normalisedMydata)
#rentan_FCM_scale <- scale(rentan_FCM)
set.seed(123)
elbow <-
fviz_nbclust(
x = rentan_FCM_scale,
FUNcluster = kmeans,
method = "wss",
k.max = 10
) + labs(subtitle = "Metode Elbow")
elbow
library(ppclust)
fkm.rentan <- fcm(rentan_FCM_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fkm.rentan)
library(ppclust)
set.seed(123)
fkm.rentan <- fcm(rentan_FCM_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fkm.rentan)
data.frame(rentan$Kecamatan,fkm.rentan$cluster)
fkm.rentan$v
fkm.rentan$v
#normalise data using custom function
rentan_scale <- as.data.frame(lapply(rentan_FCM, minMax))
set.seed(123)
elbow <-
fviz_nbclust(
x = rentan_scale,
FUNcluster = kmeans,
method = "wss",
k.max = 10
) + labs(subtitle = "Metode Elbow")
elbow
library(ppclust)
set.seed(123)
fkm.rentan <- fcm(rentan_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fkm.rentan)
data.frame(rentan$Kecamatan,fkm.rentan$cluster)
fkm.rentan$v
library(ppclust)
set.seed(123)
fcm.rentan <- fcm(rentan_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fcm.rentan)
data.frame(rentan$Kecamatan,fcm.rentan$cluster)
fcm.rentan$v
fcm.rentan2 <- ppclust2(fcm.rentan, "kmeans")
factoextra::fviz_cluster(fcm.rentan2, data = rentan_scale,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
cluster
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
unique(cluster)
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm.rentan)
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm.rentan$cluster)
## kruskall walis
cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm.rentan)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
options(scipen = 999)
knitr::include_graphics("assets/kelompok_umur.jpg")
knitr::include_graphics("assets/factor_analysis1.png")
library(readr) # untuk membaca data
library(dplyr) # untuk data manipulation
library(GGally) # untuk membuat matriks korelasi
library(psych) #
library(corrplot) #
library(ggplot2)
library (GPArotation)
library(factoextra) # for model comparison and assumption check)
library(gridExtra)
library(tidyr)
library(rmdformats)
library(BAMMtools)
rentan <- readxl::read_xlsx("dataset/kerentanansosial.xlsx")
rmarkdown::paged_table(rentan)
glimpse(rentan)
colSums(is.na(rentan))
summary(rentan)
rentan[which(rentan$pengangguran < 0.1951 | rentan$pengangguran > 1.770), ]
ggpairs(rentan[,c(2:13)], showStrips = F, upper = list(continuous = wrap("cor", size=2))) +
theme(axis.text = element_text(colour = "black", size = 7),
strip.background = element_rect(fill = "#6e8f71"),
strip.text = element_text(colour = "white", size = 6,
face = "bold"))
ggplot(data = rentan, mapping = aes(x=  lansia, y= reorder(Kecamatan,lansia))) +
geom_col(aes(fill = lansia))  + # untuk membuat barplot
labs(
title = "Persentase Jumlah Lansia pada masing-masing Kecamatan di Provinsi DKI Jakarta",
x = "Persentase Lansia",
y = "Kecamatan"
) +
scale_fill_gradient(low = "#a9d1b1", high = "#4c614e") +
geom_text(mapping = aes(label=round(lansia, digits = 4)), # menambahkan informasi label masing-masing kategori dengan variasi box
col = "white", # memberikan warna pada text
nudge_x = -1, # menggeser text berdasarkan sumbu x
label.size = 12) +
theme_minimal() +
theme(legend.position = "none") # untuk menghilangkan legend.
ggcorr(rentan, label = T, hjust = 1, layout.exp = 2, size = 3, label_size = 2, label_round = 2, low = "#d7fc5b", mid = "white", high = "#5d8064")
rentan_cor <- cor(rentan[,2:13])
rentan_KMO<-KMO(rentan_cor)
rentan_KMO$MSA
rmarkdown::paged_table(as.data.frame(rentan_KMO$MSAi))
bartlett.test(rentan[,2:13])
fa_rentan <- fa(r = rentan_cor)
fa_rentan
nfactors <- fa.parallel(rentan[,2:13], plot = T)
summary(nfactors)
# jumlah faktor optimal yang didapat
nfact <- nfactors$nfact
#factor analysis
fa_rentan_opt <- fa(r = rentan_cor, nfactors = nfact, rotate = "varimax")
fa_rentan_opt
fa.diagram(fa_rentan_opt, rsize = 1)
rentan_pca<-prcomp(rentan[,2:13], scale. = T)
rmarkdown::paged_table(as.data.frame(rentan_pca$x))
pc_keep <- rentan_pca$x[, 1:2] %>%
as.data.frame()
rmarkdown::paged_table(pc_keep)
SoVI <- pc_keep %>%
mutate(SoVI = 0.52*abs(PC1) + 0.48*abs(PC2))
rmarkdown::paged_table(SoVI)
rentan_new <- rentan %>%
select_if(~!is.numeric(.)) %>% # ambil kolom Kecamatan
cbind(SoVI = SoVI[,3]) # gabungkan dengan kolom SoVI
rmarkdown::paged_table(rentan_new)
# Membagi SoVI ke dalam 3 kategori
natural_breaks <- function(df, var) {
var_breaks <- BAMMtools::getJenksBreaks(df[[var]], k = 4)
df[[paste0('Jenks_', var)]] <- findInterval(df[[var]], var_breaks)
df
}
rentan_new <- natural_breaks(rentan_new, "SoVI")
# Membuat Kategori Rendah Sedang Tinggi
rentan_new$Kategori <- ordered(rentan_new$Jenks_SoVI,
levels = c(1,2,3),
labels = c("Rendah", "Sedang", "Tinggi"))
rmarkdown::paged_table(rentan_new)
# Melihat threshold untuk masing-masing kategori
getJenksBreaks(rentan_new$SoVI, 4)
library(geojsonio)
jakarta_json <- geojson_read("dataset/gadm36_IDN_3.json", what = "sp")
rmarkdown::paged_table(head(jakarta_json@data))
jakarta_json_mod <- sf::st_as_sf(jakarta_json)
library(stringr)
jakarta_json_mod <- jakarta_json_mod %>%
# Agar mudah digabung
mutate(NAME_3 = str_replace_all(NAME_3, fixed(" "), "") %>% str_to_title()) %>%
# melakukan pemotongan variabel/kolom yang tidak berguna untuk analisis
dplyr::select(-c(id, NL_NAME_1, NL_NAME_2, NL_NAME_3, VARNAME_3, HASC_3, TYPE_3, ENGTYPE_3))
# melakukan inspeksi data dan tipenya
glimpse(jakarta_json_mod)
jakarta_rentan <- jakarta_json_mod %>%
left_join(rentan_new, by = c("GID_3" = "Kode")) %>%
arrange(NAME_3, NAME_0)
glimpse(jakarta_rentan)
jakarta_rentan_sf <- jakarta_rentan %>%
filter(GID_3 != "IDN.7.3.10_1") %>%
filter(GID_3 != "IDN.7.3.3_1") %>%
filter(GID_3 != "IDN.7.5.2_1") %>%
sf::st_as_sf()
m <- leaflet(jakarta_rentan_sf)
popup.cont  <- paste("<h2><b>", jakarta_rentan_sf$NAME_3, "</b></h2>")
col <- jakarta_rentan_sf$SoVI
col <- col %>% replace(is.na(.), 0)
bins <- c(getJenksBreaks(jakarta_rentan_sf$SoVI, 4))
pal <- colorBin("YlOrRd", domain = col, bins = bins,)
m %>%
addProviderTiles(providers$CartoDB.DarkMatter) %>%
addPolygons(fillColor = pal(col),
weight = 1,
opacity = 1,
color = "black",
dashArray = "3",
fillOpacity = 0.8,
label = paste0("Kecamatan: ", jakarta_rentan_sf$NAME_3),
popup = popup.cont) %>%
addLegend("bottomright",
pal = pal,
values = ~col,
title = "Social Vulnerability Index",
labFormat = labelFormat(digits = 2),
opacity = 1)
rentan_FCM <- rentan[,2:13]
head(rentan_FCM)
rownames(rentan_FCM) <- rentan$Kecamatan
# custom function to implement min max scaling
minMax <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#normalise data using custom function
rentan_scale <- as.data.frame(lapply(rentan_FCM, minMax))
head(normalisedMydata)
## kruskall walis
#cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm.rentan)
# custom function to implement min max scaling
minMax <- function(x) {
(x - min(x)) / (max(x) - min(x))
}
#normalise data using custom function
rentan_scale <- as.data.frame(lapply(rentan_FCM, minMax))
head(rentan_scale)
#rentan_FCM_scale <- scale(rentan_FCM)
set.seed(123)
elbow <-
fviz_nbclust(
x = rentan_scale,
FUNcluster = kmeans,
method = "wss",
k.max = 10
) + labs(subtitle = "Metode Elbow")
elbow
library(ppclust)
set.seed(123)
fcm.rentan <- fcm(rentan_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fcm.rentan)
data.frame(rentan$Kecamatan,fcm.rentan$cluster)
fcm.rentan$v
fcm.rentan2 <- ppclust2(fcm.rentan, "kmeans")
factoextra::fviz_cluster(fcm.rentan2, data = rentan_scale,
ellipse.type = "convex",
palette = "jco",
repel = TRUE)
## kruskall walis
#cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm.rentan)
data.frame(rentan$Kecamatan,rentan_scale,fcm.rentan$cluster)
fcm_keep<-data.frame(rentan$Kecamatan,rentan_scale,fcm.rentan$cluster)
fcm_keep<-data.frame(rentan$Kecamatan,rentan_scale,fcm.rentan$cluster)
## kruskall walis
#cluster <- factor(fcm.rentan$cluster)
#kruskal.test(perempuan+KK_perempuan+lansia+pengangguran+wajib_ktp+banjir+informal+RS+puskesmas+positi_cov+rawat+isoman~cluster)
kruskal.test(fcm_keep)
fcm_keep<-data.frame(rentan$Kecamatan,rentan_scale,fcm.rentan$cluster)
fcm_keep<-data.frame(rentan$Kecamatan,rentan_scale,fcm.rentan$cluster)
fcm_keep
library(ppclust)
set.seed(123)
fcm.rentan <- fcm(rentan_scale, 3, m=2, dmetric="sqeuclidean", pw = 2,
alginitv="kmpp", alginitu="imembrand",
nstart=1, iter.max=1000, con.val=1e-09,
fixcent=FALSE, fixmemb=FALSE, stand=FALSE)
summary(fcm.rentan)
devtools::install_github("teamalgoritma/AlgoritmaAcademy")
